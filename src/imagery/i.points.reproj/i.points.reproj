#!/bin/sh
############################################################################
#
# MODULE:       i.points.reproj
#
# AUTHOR:       Hamish Bowman, Dunedin, New Zealand
#
# PURPOSE:      Reproject the target points in an imagery POINTS file
#               to save a r.proj generation loss later.
#
# COPYRIGHT:    (c) 2007 Hamish Bowman, and The GRASS Development Team
#
#############################################################################
#
# REQUIREMENTS:
#      -  awk, cs2cs from GDAL/OGR tools
#
# run from simple_xy (source) location
#

#%Module
#% description: Reproject the target points in an imagery POINTS file.
#% keywords: imagery, projection, rectification
#%End
#%option
#% key: group
#% type: string
#% gisprompt: old,group,group
#% description: Name of existing imagery group
#% required: yes
#%end
#%option
#% key: in_proj
#% type: string
#% description: Input projection parameters (PROJ.4 style)
#% required: yes
### wgs84/ll
#% answer: +init=epsg:4326
#%end
#%option
#% key: out_proj
#% type: string
#% description: Output projection parameters (PROJ.4 style)
#% required: yes
### NZTM
#% answer: +init=epsg:2193
#%end

if [ -z "$GISBASE" ] ; then
    echo "You must be in GRASS GIS to run this program." >&2
    exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
  exec g.parser "$0" "$@"
fi

#### check for cs2cs
if [ ! -x "`which cs2cs`" ] ; then
    echo "ERROR: cs2cs program not found, install it first\
      http://proj.maptools.org" 1>&2
    exit 1
fi

#### check if we have awk
if [ ! -x "`which awk`" ] ; then
    echo "ERROR: awk required, please install awk or gawk first" 1>&2
    exit 1
fi

# set environment so that awk works properly in all languages
unset LC_ALL
LC_NUMERIC=C
export LC_NUMERIC


GROUP=$GIS_OPT_GROUP
IN_PROJ=$GIS_OPT_IN_PROJ
OUT_PROJ=$GIS_OPT_OUT_PROJ

eval `g.findfile elem=group/$GROUP file=POINTS | grep '^file='`
if [ -z "$file" ] ; then
    echo "ERROR: The group's POINTS file not found, run i.points first" 1>&2
    exit 1
fi

POINTSFILE="$file"

#### setup temporary file
TMP="`g.tempfile pid=$$`"
if [ $? -ne 0 ] || [ -z "$TMP" ] ; then
    g.message -e "Unable to create temporary files" 1>&2
    exit 1
fi

grep -v '^#\|0$' $POINTSFILE | awk '{print($1 " " $2)}' > "$TMP.xy"
grep -v '^#\|0$' $POINTSFILE | awk '{print($3 " " $4)}' > "$TMP.ll"

#IN_PROJ="+proj=longlat +towgs84=0.000,0.000,0.000"
#OUT_PROJ="`g.proj -jf`"
cs2cs -f %.7f $IN_PROJ +to $OUT_PROJ < "$TMP.ll" | cut -f1 -d' '> "$TMP.nztm"

cat $POINTSFILE | head -n 3 > "$TMP.new_POINTS"

paste -d' ' "$TMP.xy" "$TMP.nztm" | \
  awk '{printf("%17s %15s %15s %15s    1\n", $1, $2, $3, $4)}' \
  >> "$TMP.new_POINTS"

NEW_POINTSFILE="$POINTSFILE.`echo "$OUT_PROJ" | cut -f2 -d=`"
cp "$TMP.new_POINTS" "$NEW_POINTSFILE"

\rm "$TMP"*

echo "New POINTS file saved to <`basename $NEW_POINTSFILE`>." 1>&2
echo "Remember to rerun i.target and rename POINTS files before running i.rectify." 1>&2

