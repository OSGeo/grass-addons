#!/bin/sh

############################################################################
#
# MODULE:       v.in.ply
#
# AUTHOR(S):    Markus Neteler
#
# PURPOSE:      Imports PLY file as a GRASS vector map
#               http://en.wikipedia.org/wiki/PLY_%28file_format%29
#               If RGB colors are present in the PLY file, automatically
#               a GRASSRGB column is created and populated with RRR:GGG:BBB
#
# COPYRIGHT:    (c) 2011 Markus Neteler, GRASS Development Team
#
#               This program is free software under the GNU General Public
#               License (>=v2). Read the file COPYING that comes with GRASS
#               for details.
#
#############################################################################

#%Module
#%  description: Import PLY file into a vector map.
#%  keywords: vector, import
#%End
#%option
#% key: file
#% type: string
#% description: PLY file
#% gisprompt: old_file,file,input
#% required : yes
#%end
#%option
#% key: vect
#% type: string
#% gisprompt: new,vector,vector
#% description: Name for output vector map
#% required : no
#%end

if  [ -z "$GISBASE" ] ; then
    echo "You must be in GRASS GIS to run this program." >&2
    exit 1
fi

# save command line
if [ "$1" != "@ARGS_PARSED@" ] ; then
    CMDLINE=`basename "$0"`
    for arg in "$@" ; do
        CMDLINE="$CMDLINE \"$arg\""
    done
    export CMDLINE
    exec g.parser "$0" "$@"
fi

#needed?
PROG=`basename "$0"`

#### check if we have awk
if [ ! -x "`which awk`" ] ; then
    g.message -e "awk required, please install awk or gawk first"
    exit 1
fi

# setting environment, so that awk works properly in all languages
unset LC_ALL
LC_NUMERIC=C
export LC_NUMERIC


if [ ! -e "$GIS_OPT_FILE" ] ; then
    g.message -e "File not found <$GIS_OPT_FILE>"
    exit 1
fi


# no-op?
cat "$GIS_OPT_FILE" | awk "/ply/,/end_header/" > /dev/null

DATALINES=`head -n 30 "$GIS_OPT_FILE" | grep 'element vertex' | cut -d' ' -f3`
# TODO: test for valid number of lines here.

head -n 30 "$GIS_OPT_FILE" | grep 'char red' > /dev/null 2>/dev/null
if [ $? -eq 0 ] ; then
   echo "Colors found in PLY file, creating GRASSRGB column"
   COLOR=1
else
   COLOR=0
fi

if [ -n "$GIS_OPT_VECT" ] ; then
    MAP="$GIS_OPT_VECT"
else
    MAP=`basename $GIS_OPT_FILE .ply`
fi

if [ "$COLOR" -eq 0 ] ; then
   tail -n "$DATALINES" "$GIS_OPT_FILE" | tr -s ' ' ' ' | \
      sed 's+^ ++g' | cut -d' ' -f1-3 | \
      v.in.ascii -z x=1 y=2 z=3 out=$MAP fs=" "

   if [ $? -ne 0 ] ; then
      g.message -e "An error occurred. Halting."
      exit 1
   fi
else
   tail -n "$DATALINES" "$GIS_OPT_FILE" | tr -s ' ' ' ' | \
      sed 's+^ ++g' | cut -d' ' -f1-7 | \
      awk -F " " '{printf "%f,%f,%f,%d:%d:%d,%d\n", $1, $2, $3, $4, $5, $6, $7}' | \
      v.in.ascii -z x=1 y=2 z=3 out=$MAP fs="," \
        columns="x double precision,y double precision,z double precision,GRASSRGB varchar(11),alpha integer"

   if [ $? -ne 0 ] ; then
      g.message -e "An error occurred. Halting."
      exit 1
   fi
fi

# write cmd history:
v.support "$MAP" cmdhist="$CMDLINE"

exit 0
