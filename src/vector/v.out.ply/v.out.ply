#!/bin/sh

############################################################################
#
# MODULE:       v.in.ply
#
# AUTHOR(S):    Markus Neteler
#
# PURPOSE:      Imports PLY file as a GRASS vector map
#               http://en.wikipedia.org/wiki/PLY_%28file_format%29
#               If RGB colors are present in the PLY file, automatically
#               a GRASSRGB column is created and populated with RRR:GGG:BBB
#
# COPYRIGHT:    (c) 2011 Markus Neteler, GRASS Development Team
#
#               This program is free software under the GNU General Public
#               License (>=v2). Read the file COPYING that comes with GRASS
#               for details.
#
#############################################################################

#%Module
#%  description: Export a vector map as PLY file.
#%  keywords: vector, export
#%End
#%option
#% key: vect
#% type: string
#% gisprompt: old,vector,vector
#% description: Name for input vector map
#% required : yes
#%end
#%option
#% key: file
#% type: string
#% description: PLY file
#% gisprompt: new_file,file,input
#% required : no
#%end

if  [ -z "$GISBASE" ] ; then
    echo "You must be in GRASS GIS to run this program." >&2
 exit 1
fi

# save command line
if [ "$1" != "@ARGS_PARSED@" ] ; then
    CMDLINE=`basename "$0"`
    for arg in "$@" ; do
        CMDLINE="$CMDLINE \"$arg\""
    done
    export CMDLINE
    exec g.parser "$0" "$@"
fi

PROG=`basename "$0"`

#### check if we have awk
if [ ! -x "`which awk`" ] ; then
    g.message -e "awk required, please install awk or gawk first"
    exit 1
fi

# setting environment, so that awk works properly in all languages
unset LC_ALL
LC_NUMERIC=C
export LC_NUMERIC

MAP="$GIS_OPT_VECT"

if [ -n "$GIS_OPT_FILE" ] ; then
    OUT="$GIS_OPT_FILE"
else
    OUT="$GIS_OPT_VECT".ply
fi

eval `v.info -t "$MAP"`
POINTS="$points"

echo "Exporting $POINTS points..."

echo "ply
format ascii 1.0
comment VCGLIB generated
element vertex $POINTS
property float x
property float y
property float z
property uchar red
property uchar green
property uchar blue
property uchar alpha
element face 0
property list uchar int vertex_indices
end_header" > "$OUT"


v.info -c "$MAP" | grep GRASSRGB > /dev/null
if [ $? -eq 1 ] ; then
   v.out.ascii "$MAP" | tr '|' ' ' | tr ':' ' ' >> "$OUT"
else
   # g.extension v.out.ascii.db
   # can the regular v.out.ascii do it now? (that's still really really slow for big maps though)
   if [ ! -x "`which v.out.ascii.db`" ] ; then
      g.message -e "v.out.ascii.db required, please install first with 'g.extension v.out.ascii.db'"
      exit 1
   fi
   v.out.ascii.db "$MAP" columns=GRASSRGB,alpha | \
      cut -d'|' -f2-6 | tr '|' ' ' | tr ':' ' ' >> "$OUT"
fi

# write cmd history:
v.support "$MAP" cmdhist="$CMDLINE"

exit 0
