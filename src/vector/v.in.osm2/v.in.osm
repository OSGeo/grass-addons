#!/bin/sh
############################################################################
#
# MODULE:       v.in.osm
#
# AUTHOR(S):    Hamish Bowman, Dunedin, New Zealand
#
# PURPOSE:      Import vector data direct from OpenStreetMap's database
#
# COPYRIGHT:    (c) 2010 Hamish Bowman, and the GRASS Development Team
#
#               This program is free software under the GNU General Public
#               License (>=v2). Read the file COPYING that comes with GRASS
#               for details.
#############################################################################
#
# -- Experimental --
#
#   See  http://wiki.openstreetmap.org/wiki/Xapi
#        http://www.gpsbabel.org/htmldoc-development/fmt_osm.html
#
# REQUIREMENTS:  gpsbabel 1.3.5 or newer
#                wget
#                g.region from GRASS 6.5 or newer (needs the -w flag)

#%Module
#%  description: Import vector data for the current region direct from OpenStreetMap's database
#%  keywords: vector, import, osm
#%End
#%option
#%  key: output
#%  type: string
#%  gisprompt: new,vector,output
#%  description: Name for output map
#%  required : yes
#%end
#%option
#%  key: feature
#%  type: string
#%  description: Import as nodes or ways (GpsBabel only allows one)
#%  options: nodes,ways
#%  answer: ways
#%end
#%option
#%  key: query
#%  type: string
#%  label: Xapi query string
#%  description: For example: "way[highway=track|path]"
#%  required : no
#%end
#%option
#%  key: server
#%  type: string
#%  description: Xapi server
#%  answer: http://jxapi.openstreetmap.org/xapi/api/0.6
#%end
#failover server 1: http://open.mapquestapi.com/xapi/api/0.6
#failover server 2: http://jxapi.osm.rambler.ru/xapi/api/0.6


if [ -z "$GISBASE" ] ; then
   echo "You must be in GRASS GIS to run this program." >&2
   exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
  exec g.parser "$0" "$@"
fi


#### check if we have wget and gpsbabel
if [ ! -x "`which wget`" ] ; then
    g.message -e  "wget required, please install it first"
    exit 1
fi
if [ ! -x "`which gpsbabel`" ] ; then
    g.message -e  "GpsBabel required, please install it first"
    exit 1
fi
#### check if we have new enough software
if [ `gpsbabel --help | grep -wc osm` -ne 1 ] ; then
   g.message -e "Newer version of GpsBabel is required."
   exit 1
fi


# get bounding box in WGS84
eval `g.region -bgu`
BBOX="$ll_w,$ll_s,$ll_e,$ll_n"


#### setup temporary file
TEMPFILE="`g.tempfile pid=$$`"
if [ $? -ne 0 ] || [ -z "$TEMPFILE" ] ; then
    g.message -e "Unable to create temporary files"
    exit 1
fi

BASEURL="$GIS_OPT_SERVER"

if [ -z "$GIS_OPT_QUERY" ] ; then
   wget -O "$TEMPFILE" "$BASEURL/*[bbox=$BBOX]"
else
   wget -O "$TEMPFILE" "$BASEURL/$GIS_OPT_QUERY[bbox=$BBOX]"
fi

if [ $? -ne 0 ] ; then
   g.message -e "Download failed."
   \rm "$TEMPFILE"
   exit 1
fi

if [ "$GIS_OPT_FEATURE" = "ways" ] ; then
   FEAT="-r"
else
   FEAT="-w"
fi

v.in.gpsbabel $FEAT input="$TEMPFILE" output="$GIS_OPT_OUTPUT" format=osm  # --quiet

if [ $? -ne 0 ] ; then
   g.message -e "Import failed."
   \rm "$TEMPFILE"
   exit 1
fi


\rm "$TEMPFILE"
g.message "Done."

