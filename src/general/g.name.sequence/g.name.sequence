#!/bin/sh

############################################################################
#
# MODULE:       g.name.sequence
# AUTHOR(S):    Hamish Bowman, Dunedin, New Zealand
# PURPOSE:      Prints a series of sequential map names
# COPYRIGHT:    (C) 2013 Hamish Bowman, and the GRASS Development Team
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
############################################################################
#%Module
#% description: Prints out a sequential series of user defined map names.
#% keywords: general, scripting
#%End
#%option
#%  key: minimum
#%  type: integer
#%  description: Starting number
#%  answer: 0
#%end
#%option
#%  key: maximum
#%  type: integer
#%  description: Ending number
#%  required: yes
#%end
#%option
#%  key: skip
#%  type: integer
#%  description: Step interval
#%  answer: 1
#%end
#%option
#%  key: padding
#%  type: integer
#%  description: Width of numerical part
#%  answer: 3
#%end
#%option
#%  key: basename
#%  type: string
#%  description: Common base of the map names
#%  required: yes
#%end
#%option
#%  key: separator
#%  type: string
#%  label: Field separator
#%  description: Character(s), or also accepts "comma,space,tab,newline"
#%  answer: comma
#%end


if [ -z "$GISBASE" ] ; then
    echo "You must be in GRASS GIS to run this program." 1>&2
    exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
    exec g.parser "$0" "$@"
fi

#### check if we have seq
if [ ! -x "`which seq`" ] ; then
    g.message -e "seq required, please install it first"
    exit 1
fi

#### check if we have awk
if [ ! -x "`which awk`" ] ; then
    g.message -e "awk required, please install awk or gawk first"
    exit 1
fi

MIN="$GIS_OPT_MINIMUM"
MAX="$GIS_OPT_MAXIMUM"
PAD="$GIS_OPT_PADDING"
SEP="$GIS_OPT_SEPARATOR"

NL=0
case "$SEP" in
  comma) SEP=","
    ;;
  space) SEP=" "
    ;;
  # FIXME: is this portable to BSD/OSX?
  tab | "\t") SEP=`echo "\t"`
    ;;
  newline | "\n") SEP="|"
    NL=1
    ;;
esac
#g.message -d "SEP=[$SEP]"

# rudimentary check
if [ "$MIN" -lt 0 ] || [ "$MAX" -lt 0 ] ; then
   g.message -e "Only positive numbers in map name are supported"
   exit 1
fi

if [ "$MAX" -gt "$MIN" ] || [ "$MAX" -eq "$MIN" ]; then
   # handy tip: awk doesn't support log10(), but ln(x)/ln(10) is the same as log10(x)
   WIDTH=`echo "$MAX" | awk '{print int(log($1)/log(10)) + 1}'`
else
   WIDTH=`echo "$MIN" | awk '{print int(log($1)/log(10)) + 1}'`
fi
#g.message -d "width=$WIDTH"

if [ "$WIDTH" -gt "$PAD" ] && [ "$PAD" -ne 0 ] ; then
   g.message -e "Padding option not large enough to cover range of values given"
   exit 1
fi

OPT_STR="${GIS_OPT_BASENAME}%0${PAD}g"

if [ "$NL" -eq 0 ] ; then
  seq -s"$SEP" -f "$OPT_STR" \
     "$GIS_OPT_MINIMUM" "$GIS_OPT_SKIP" "$GIS_OPT_MAXIMUM"
else
  seq -s"$SEP" -f "$OPT_STR" \
     "$GIS_OPT_MINIMUM" "$GIS_OPT_SKIP" "$GIS_OPT_MAXIMUM" | tr '|' '\n'
fi
