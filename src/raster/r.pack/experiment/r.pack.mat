#!/bin/sh
#  r.pack   --  pack up a raster map as binary MAT-File:
#     r.out.mat file + support files => gzip
#
#   (c) 2004 GRASS Development Team
#   AUTHOR: Hamish Bowman, Otago University, New Zealand
#
#   This program is free software under the GNU General Public
#   License (>=v2). Read the file COPYING that comes with GRASS
#   for details.
#

#%Module
#%  description: Packs up a raster map as binary MAT-File and support files for copying
#%End
#%option
#% key: input
#% type: string
#% gisprompt: old,cell,raster
#% description: Name of an existing raster map
#% required : yes
#%end

if [ -z "$GISBASE" ] ; then
   echo "You must be in GRASS GIS to run this program." >&2
   exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
  exec g.parser "$0" "$@"
fi

# check for tar  (is there a better way?)
if [ -z "`which tar`" ] ; then
   echo "ERROR: tar must be installed to use this program."
   exit 1
fi
# check for gzip
if [ -z "`which gzip`" ] ; then
   echo "ERROR: gzip must be installed to use this program."
   exit 1
fi


# create temporary directory to hold bits
TMP_DIR="`g.tempfile pid=$$`"
if [ $? -ne 0 ] || [ -z "$TMP_DIR" ] ; then
   echo "ERROR: unable to create temporary files" 1>&2
   exit 1
fi
rm -f "$TMP_DIR"
mkdir "$TMP_DIR"
if [ ! -d "$TMP_DIR" ] ; then
   echo "ERROR: unable to create temporary directory" 1>&2
   exit 1
fi

# output map
r.out.mat input="$GIS_OPT_INPUT" output="$TMP_DIR"/map.mat


# copy support files
for SUPPORT in colr hist cats ; do 
    eval `g.findfile element=$SUPPORT file="$GIS_OPT_INPUT"`
    if [ ! -z "$file" ] ; then
        cp "$file" "$TMP_DIR"/$SUPPORT
    fi
done


# copy projection info
#   (would prefer to use g.proj*, but this way is 5.3 and 5.7 compat)
eval `g.gisenv`
cp "$GISDBASE"/"$LOCATION_NAME"/PERMANENT/PROJ_INFO "$TMP_DIR"/proj_info


# pack it all up
OLD_DIR="`pwd`"
cd "$TMP_DIR"/
tar czf "$OLD_DIR"/"$GIS_OPT_INPUT".pack *


# clean up
cd "$OLD_DIR"
rm -rf "$TMP_DIR"

echo Finished.
exit 0
