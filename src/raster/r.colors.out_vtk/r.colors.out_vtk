#!/bin/sh

############################################################################
#
# MODULE:       r.colors.out_vtk
# AUTHOR(S):    Hamish Bowman
# PURPOSE:      
# COPYRIGHT:    (c) 2011 Hamish Bowman and The GRASS Development Team
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
############################################################################
# 
# instructions:
#  http://www.vtk.org/Wiki/Manually_Creating_a_Colormap
# 
# examples:
#   normalized:
# <ColorMap name="Black-Body Radiation" space="RGB">
#   <Point x="0" o="0" r="0" g="0" b="0"/>
#   <Point x="0.4" o="0.4" r="0.901961" g="0" b="0"/>
#   <Point x="0.8" o="0.8" r="0.901961" g="0.901961" b="0"/>
#   <Point x="1" o="1" r="1" g="1" b="1"/>
# </ColorMap>
# 
#   absolute:
# <ColorMap name="Consistency" space="RGB">
#   <Point x="-1.000" o="1" r="0.0" g="0.0" b="0.0"/>
#   <Point x="0.000" o="1" r="0.0" g="1.0" b="0.0"/>
#   <Point x="1.000" o="1" r="1.0" g="0.0" b="0.0"/>
# </ColorMap>
# 

#%Module
#% description: Exports the color table associated with a raster map layer to a VTK XML file.
#% keywords: raster, export, color table, VTK
#%End
#%Flag
#% key: n
#% description: Normalize range for generic use
#%End
#%Option
#% key: map
#% type: string
#% required: yes
#% multiple: no
#% key_desc: name
#% description: Name of input raster map
#% gisprompt: old,cell,raster
#%End
#%Option
#% key: output
#% type: string
#% required: yes
#% multiple: no
#% key_desc: name
#% description: Name of output XML colormap file
#% gisprompt: new_file,file,output
#%End

if [ -z "$GISBASE" ] ; then
    echo "You must be in GRASS GIS to run this program." 1>&2
    exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
    exec g.parser "$0" "$@"
fi

if [ ! -x `which r.colors.out` ] ; then
   g.message -e "You need a newer version of GRASS to use this."
   exit 1
fi


#### --overwrite test
if [ -e "$GIS_OPT_OUTPUT" ] ; then
   if [ -z "$GRASS_OVERWRITE" ] || [ "$GRASS_OVERWRITE" -ne 1 ] ; then
      g.message -e "File <$GIS_OPT_OUTPUT> already exists"
      exit 1
   fi
fi


#### test if map exists
eval `g.findfile element=cell file="$GIS_OPT_MAP"`
if [ -z "$fullname" ] ; then
   g.message -e "Raster map <$GIS_OPT_MAP> not found"
   exit 1
fi


#### start writing it
echo "<ColorMap name=\"$GIS_OPT_MAP\" space=\"RGB\">" > "$GIS_OPT_OUTPUT"

if [ $GIS_FLAG_N -eq 1 ] ; then
   r.colors.out -p map="$GIS_OPT_MAP" rules=- | grep '^[0-9]' | tr ':' ' ' | \
      awk -v MIN="$min" -v MAX="$max" \
       '{ printf("  <Point x=\"%.15g\" o=\"%.15g\" r=\"%.3f\" g=\"%.3f\" b=\"%.3f\" />\n", \
                  $1/100., $1/100., $2/255., $3/255., $4/255.)}' \
      >> "$GIS_OPT_OUTPUT"

else
   r.colors.out map="$GIS_OPT_MAP" rules=- | grep '^[0-9]' | tr ':' ' ' | \
      awk '{printf("  <Point x=\"%.15g\" o=\"1\" r=\"%.3f\" g=\"%.3f\" b=\"%.3f\" />\n", \
                   $1, $2/255., $3/255., $4/255.)}' >> "$GIS_OPT_OUTPUT"

fi

echo "</ColorMap>" >> "$GIS_OPT_OUTPUT"


#### done!
