#!/bin/sh
#
############################################################################
#
# MODULE:       	r.aggregate.stats
# AUTHOR(S):		Isaac Ullah, Arizona State University
# PURPOSE:		Aggregates a series of maps (based on a shared file name pattern) using r.series, 
#			then calculates univariate statistics for the aggragate map.
# ACKNOWLEDGEMENTS:	National Science Foundation Grant #BCS0410269 
# COPYRIGHT:		(C) 2007 by Isaac Ullah, Michael Barton, Arizona State University
#			This program is free software under the GNU General Public
#			License (>=v2). Read the file COPYING that comes with GRASS
#			for details.
#
#############################################################################


#%Module
#%  description: Aggregates a series of maps (based on a shared file name pattern) using r.series, then calculates univariate statistics for the aggragate map.

#%END
#%option
#% key: pattern
#% type: string
#% gisprompt: old,cell,raster
#% description: Pattern of first part of file names (prefixes) for map series (use -f if for suffixes)
#% required : yes
#%END

#%option
#% key: method
#% type: string
#% answer: average
#% options: average,count,median,mode,minimum,min_raster,maximum,max_raster,stddev,sum,variance,diversity,slope,offset,quart1,quart3,perc90
#% required : yes
#% description: Method of aggregating map series (see r.series help for option descriptions)
#% required : yes
#%END

#%flag
#% key: f
#% description: -f Search pattern is for suffixes (last part of file names)
#%END

#%flag
#% key: s
#% description: -s Only calculate sum of aggregate map
#%END

#%flag
#% key: k
#% description: -k Keep aggregate map (will be called "'pattern'_'method'")
#%END



if  [ -z "$GISBASE" ] ; then
 echo "You must be in GRASS GIS to run this program." >&2
 exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
  exec g.parser "$0" "$@"
fi


	pattern=$GIS_OPT_pattern
	method=$GIS_OPT_method
	string=$pattern"_temp_list.txt"

if [ "$GIS_FLAG_s" -eq 1 ]; then

g.mlist --quiet type=rast sep=, pattern="*"$pattern > $string

else

g.mlist --quiet type=rast sep=, pattern=$pattern"*" > $string

fi

	tempmap=$pattern"_temp_aggregate"

r.series input=`cat $string` output=$tempmap method=$method

if [ "$GIS_FLAG_s" -eq 1 ]; then

	number=`eval r.sum --quiet rast=$tempmap | cut -d'=' -f2`

echo ""
echo ""
echo "The sum of the $method aggregate map is: $number"
echo ""
echo ""


else

echo ""
echo ""
echo "Sumary statistics for the $method aggregate map:"
echo ""
r.univar -e map=$tempmap percentile=90 --quiet 
echo ""
echo ""

fi



if [ "$GIS_FLAG_k" -eq 1 ]; then

	output=$pattern"_"$method

g.rename --quiet rast=$tempmap,$output

echo "Aggregate map '$output' kept"

else
 
g.remove --quiet rast=$tempmap

fi

rm -f $string


