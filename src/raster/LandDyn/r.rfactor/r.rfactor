#!/bin/sh
#
############################################################################
#
# MODULE:       	r.rfactor
# AUTHOR(S):		Isaac Ullah, Arizona State University
# PURPOSE:		Calculates estimated annual R factor for use in r.landscape.evol
#			from mean annual precip, and monthly average precip maps. 
# ACKNOWLEDGEMENTS:	National Science Foundation Grant #BCS0410269 
#		   	Based on Renard and Freimund, 1994.
# COPYRIGHT:	   	(C) 2007 by Isaac Ullah, Michael Barton, Arizona State University
#		   	This program is free software under the GNU General Public
#		   	License (>=v2). Read the file COPYING that comes with GRASS
#		   	for details.
#
#############################################################################


#%Module
#%  description: Calculates estimated annual (and optionally monthly) R factor for use in r.landscape.evol from mean annual precip, and monthly average precip maps.
#%End
#%option
#% key: annual
#% type: string
#% gisprompt: old,cell,raster
#% description: Input annual precip map.
#% required : yes
#%END
#%option
#% key: jan
#% type: string
#% gisprompt: old,cell,raster
#% description: Input Jan average precip map.
#% required : yes
#%END
#%option
#% key: feb
#% type: string
#% gisprompt: old,cell,raster
#% description: Input Feb average precip map.
#% required : yes
#%END
#%option
#% key: mar
#% type: string
#% gisprompt: old,cell,raster
#% description: Input Mar average precip map.
#% required : yes
#%END
#%option
#% key: apr
#% type: string
#% gisprompt: old,cell,raster
#% description: Input Apr average precip map.
#% required : yes
#%END
#%option
#% key: may
#% type: string
#% gisprompt: old,cell,raster
#% description: Input May average precip map.
#% required : yes
#%END
#%option
#% key: jun
#% type: string
#% gisprompt: old,cell,raster
#% description: Input Jun average precip map.
#% required : yes
#%END
#%option
#% key: jul
#% type: string
#% gisprompt: old,cell,raster
#% description: Input Jul average precip map.
#% required : yes
#%END
#%option
#% key: aug
#% type: string
#% gisprompt: old,cell,raster
#% description: Input Aug average precip map.
#% required : yes
#%END
#%option
#% key: sep
#% type: string
#% gisprompt: old,cell,raster
#% description: Input Sep average precip map.
#% required : yes
#%END
#%option
#% key: oct
#% type: string
#% gisprompt: old,cell,raster
#% description: Input Oct average precip map.
#% required : yes
#%END
#%option
#% key: nov
#% type: string
#% gisprompt: old,cell,raster
#% description: Input Nov average precip map.
#% required : yes
#%END
#%option
#% key: dec
#% type: string
#% gisprompt: old,cell,raster
#% description: Input Dec average precip map.
#% required : yes
#%END
#%option
#% key: prefx
#% type: string
#% description: Prefix for all output map(s).
#% answer: rfactor
#% required : yes
#%END
#%flag
#% key: m
#% description: -m Calcuate average monthly R factor maps as well.
#%END
#%flag
#% key: f
#% description: -f Output Modified Fournier Index map(s) as well.
#%END

if  [ -z "$GISBASE" ] ; then
 echo "You must be in GRASS GIS to run this program." >&2
 exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
  exec g.parser "$0" "$@"
fi

annual=$GIS_OPT_annual
jan=$GIS_OPT_jan
feb=$GIS_OPT_feb
mar=$GIS_OPT_mar
apr=$GIS_OPT_apr
may=$GIS_OPT_may
jun=$GIS_OPT_jun
jul=$GIS_OPT_jul
aug=$GIS_OPT_aug
sep=$GIS_OPT_sep
oct=$GIS_OPT_oct
nov=$GIS_OPT_nov
dec=$GIS_OPT_dec
prefx=$GIS_OPT_prefx
echo "prefix=$prefx"
res=`eval g.region -m | grep "nsres=" | cut -d = -f 2`
echo "res=$res"
rannual=$prefx".annual.r"
echo "annual r factor map=$rannual"
fm=$prefx".annual.fournier"

if [ "$GIS_FLAG_f" -eq 1 ]; then
echo "annual modified fournier index map=$fm"
fi

if [ "$GIS_FLAG_m" -eq 1 ]; then
fmjan=$prefx".jan.fournier"
fmfeb=$prefx".feb.fournier"
fmmar=$prefx".mar.fournier"
fmapr=$prefx".apr.fournier"
fmmay=$prefx".may.fournier"
fmjun=$prefx".jun.fournier"
fmjul=$prefx".jul.fournier"
fmaug=$prefx".aug.fournier"
fmsep=$prefx".sep.fournier"
fmoct=$prefx".oct.fournier"
fmnov=$prefx".nov.fournier"
fmdec=$prefx".dec.fournier"
rjan=$prefx".jan.r"
echo "jan r factor map=$rjan"
rfeb=$prefx".feb.r"
echo "feb r factor map=$rfeb"
rmar=$prefx".mar.r"
echo "mar r factor map=$rmar"
rapr=$prefx".apr.r"
echo "apr r factor map=$rapr"
rmay=$prefx".may.r"
echo "may r factor map=$rmay"
rjun=$prefx".jun.r"
echo "jun r factor map=$rjun"
rjul=$prefx".jul.r"
echo "jul r factor map=$rjul"
raug=$prefx".aug.r"
echo "aug r factor map=$raug"
rsep=$prefx".sep.r"
echo "sep r factor map=$rsep"
roct=$prefx".oct.r"
echo "oct r factor map=$roct"
rnov=$prefx".nov.r"
echo "nov r factor map=$rnov"
rdec=$prefx".dec.r"
echo "dec r factor map=$rdec"
fi

if [ "$GIS_FLAG_m" -eq 1 -a "$GIS_FLAG_f" -eq 1 ]; then
echo "jan modified fournier index map=$fmjan"
echo "feb modified fournier index map=$fmfeb"
echo "mar modified fournier index map=$fmmar"
echo "apr modified fournier index map=$fmapr"
echo "may modified fournier index map=$fmrmay"
echo "jun modified fournier index map=$fmjun"
echo "jul modified fournier index map=$fmjul"
echo "aug modified fournier index map=$fmaug"
echo "sep modified fournier index map=$fmsep"
echo "oct modified fournier index map=$fmoct"
echo "nov modified fournier index map=$fmnov"
echo "dec modified fournier index map=$fmdec"
fi

if [ "$GIS_FLAG_m" -eq 1 ]; then
echo ""
echo "******First making annual R factor map******"
echo ""
fi

echo ""
echo "*************************"
echo "step 1 of 2: Calculating Modified Fournier Index map"
echo "*************************"
echo ""


r.mapcalc "$fm=((exp($jan,2)+exp($feb,2)+exp($mar,2)+exp($apr,2)+exp($may,2)+exp($jun,2)+exp($jul,2)+exp($aug,2)+exp($sep,2)+exp($oct,2)+exp($nov,2)+exp($dec,2))/12)/$annual"


echo ""
echo "*************************"
echo "step 2 of 2: Calculating estimated R-factor map"
echo "*************************"
echo ""

r.mapcalc "$rannual=(95.77-(6.081*$fm)+(0.477*exp($fm,2)))/17.2"

#Below are the two the r-factor regression conversions suggested by Renard and Freimund (1994)for Fournier < 55 and Fournier > 55. However, with the maps I have used to test this script, the first regression outputs unreasonable r factor values. Therefore, this module only uses the second regresion for all Fournier Index values. Please see Renard and Friemund (1994) for their explanation of why two different regressions should be used.
#r.mapcalc "$output=if($fm<55,(0.07397*exp($fm,1.847))/17.2,(95.77-(6.081*$fm)+(0.477*exp($fm,2)))/17.2)"

if [ "$GIS_FLAG_m" -eq 1 ]; then
echo ""
echo "******Now making monthly R factor maps******"
echo ""
echo ""
echo "*************************"
echo "step 1 of 2: Calculating Modified Fournier Index maps for each month. This may take some time..."
echo "*************************"
echo ""

r.mapcalc "$fmjan=(exp($jan,2))/((exp($jan,2)+exp($feb,2)+exp($mar,2)+exp($apr,2)+exp($may,2)+exp($jun,2)+exp($jul,2)+exp($aug,2)+exp($sep,2)+exp($oct,2)+exp($nov,2)+exp($dec,2))/12)"

r.mapcalc "$fmfeb=(exp($feb,2))/((exp($jan,2)+exp($feb,2)+exp($mar,2)+exp($apr,2)+exp($may,2)+exp($jun,2)+exp($jul,2)+exp($aug,2)+exp($sep,2)+exp($oct,2)+exp($nov,2)+exp($dec,2))/12)"

r.mapcalc "$fmmar=(exp($mar,2))/((exp($jan,2)+exp($feb,2)+exp($mar,2)+exp($apr,2)+exp($may,2)+exp($jun,2)+exp($jul,2)+exp($aug,2)+exp($sep,2)+exp($oct,2)+exp($nov,2)+exp($dec,2))/12)"

r.mapcalc "$fmapr=(exp($apr,2))/((exp($jan,2)+exp($feb,2)+exp($mar,2)+exp($apr,2)+exp($may,2)+exp($jun,2)+exp($jul,2)+exp($aug,2)+exp($sep,2)+exp($oct,2)+exp($nov,2)+exp($dec,2))/12)"

r.mapcalc "$fmmay=(exp($may,2))/((exp($jan,2)+exp($feb,2)+exp($mar,2)+exp($apr,2)+exp($may,2)+exp($jun,2)+exp($jul,2)+exp($aug,2)+exp($sep,2)+exp($oct,2)+exp($nov,2)+exp($dec,2))/12)"

r.mapcalc "$fmjun=(exp($jun,2))/((exp($jan,2)+exp($feb,2)+exp($mar,2)+exp($apr,2)+exp($may,2)+exp($jun,2)+exp($jul,2)+exp($aug,2)+exp($sep,2)+exp($oct,2)+exp($nov,2)+exp($dec,2))/12)"

r.mapcalc "$fmjul=(exp($jul,2))/((exp($jan,2)+exp($feb,2)+exp($mar,2)+exp($apr,2)+exp($may,2)+exp($jun,2)+exp($jul,2)+exp($aug,2)+exp($sep,2)+exp($oct,2)+exp($nov,2)+exp($dec,2))/12)"

r.mapcalc "$fmaug=(exp($aug,2))/((exp($jan,2)+exp($feb,2)+exp($mar,2)+exp($apr,2)+exp($may,2)+exp($jun,2)+exp($jul,2)+exp($aug,2)+exp($sep,2)+exp($oct,2)+exp($nov,2)+exp($dec,2))/12)"

r.mapcalc "$fmsep=(exp($sep,2))/((exp($jan,2)+exp($feb,2)+exp($mar,2)+exp($apr,2)+exp($may,2)+exp($jun,2)+exp($jul,2)+exp($aug,2)+exp($sep,2)+exp($oct,2)+exp($nov,2)+exp($dec,2))/12)"

r.mapcalc "$fmoct=(exp($oct,2))/((exp($jan,2)+exp($feb,2)+exp($mar,2)+exp($apr,2)+exp($may,2)+exp($jun,2)+exp($jul,2)+exp($aug,2)+exp($sep,2)+exp($oct,2)+exp($nov,2)+exp($dec,2))/12)"

r.mapcalc "$fmnov=(exp($nov,2))/((exp($jan,2)+exp($feb,2)+exp($mar,2)+exp($apr,2)+exp($may,2)+exp($jun,2)+exp($jul,2)+exp($aug,2)+exp($sep,2)+exp($oct,2)+exp($nov,2)+exp($dec,2))/12)"

r.mapcalc "$fmdec=(exp($dec,2))/((exp($jan,2)+exp($feb,2)+exp($mar,2)+exp($apr,2)+exp($may,2)+exp($jun,2)+exp($jul,2)+exp($aug,2)+exp($sep,2)+exp($oct,2)+exp($nov,2)+exp($dec,2))/12)"

echo ""
echo "*************************"
echo "step 2 of 2: Calculating estimated monthly R-factor maps. This may take some time..."
echo "*************************"
echo ""

r.mapcalc "$rjan=(95.77-(6.081*$fmjan)+(0.477*exp($fmjan,2)))/17.2"

r.mapcalc "$rfeb=(95.77-(6.081*$fmfeb)+(0.477*exp($fmfeb,2)))/17.2"

r.mapcalc "$rmar=(95.77-(6.081*$fmmar)+(0.477*exp($fmmar,2)))/17.2"

r.mapcalc "$rapr=(95.77-(6.081*$fmapr)+(0.477*exp($fmapr,2)))/17.2"

r.mapcalc "$rmay=(95.77-(6.081*$fmmay)+(0.477*exp($fmmay,2)))/17.2"

r.mapcalc "$rjun=(95.77-(6.081*$fmjun)+(0.477*exp($fmjun,2)))/17.2"

r.mapcalc "$rjul=(95.77-(6.081*$fmjul)+(0.477*exp($fmjul,2)))/17.2"

r.mapcalc "$raug=(95.77-(6.081*$fmaug)+(0.477*exp($fmaug,2)))/17.2"

r.mapcalc "$rsep=(95.77-(6.081*$fmsep)+(0.477*exp($fmsep,2)))/17.2"

r.mapcalc "$roct=(95.77-(6.081*$fmoct)+(0.477*exp($fmoct,2)))/17.2"

r.mapcalc "$rnov=(95.77-(6.081*$fmnov)+(0.477*exp($fmnov,2)))/17.2"

r.mapcalc "$rdec=(95.77-(6.081*$fmdec)+(0.477*exp($fmdec,2)))/17.2"

fi

if [ "$GIS_FLAG_m" -eq 1 -a "$GIS_FLAG_f" -eq 1 ]; then
echo ""
echo "Done"
echo ""

elif [ "$GIS_FLAG_m" -eq 1 -a "$GIS_FLAG_f" -eq 0 ]; then

echo ""
echo "Cleaning up"
echo ""

g.remove rast=$fm,$fmjan,$fmfeb,$fmmar,$fmapr,$fmmay,$fmjun,$fmjul,$fmaug,$fmsep,$fmoct,$fmnov,$fmdec

echo ""
echo "Done"
echo ""

elif [ "$GIS_FLAG_m" -eq 0 -a "$GIS_FLAG_f" -eq 1 ]; then

echo ""
echo "Done"
echo ""

else


echo ""
echo "Cleaning up"
echo ""

g.remove rast=$fm

echo ""
echo "Done"
echo ""

fi
