#!/bin/sh
#
############################################################################
#
# MODULE:       	r.rfactor.iterate
# AUTHOR(S):		Isaac Ullah, Arizona State University
# PURPOSE:		Calculates estimated annual (and optionally monthly) R factor for use in r.landscape.evol from 
#			mean annual precip, and monthly average precip maps. This script operates iteratively on input 
#			maps already in the current mapset which conform to the naming convention "prefix(ie. the 
#			prefix specified in r.climate)_Month(ie. "Dec" for december map or "Ann" for yearly 
#			map)_year(integer year number of precip map starting from most recent and ascending as you go 
#			backwards in time). An example is: "rainfall_Ann_2000" which would be the name of a map of 
#			average annual precip for the year 2000BP that has a prefix of "rainfall"). This naming 
#			convention will be automatically generated by r.climate. When entering the input prefixes here, 
#			leave off the year number (ie "_2000") as these will be controlled by the variables "max", 
#			"min", and "stepsize". An example input prefix is: "rainfall_Ann" for all average annual precip 
#			maps.
# ACKNOWLEDGEMENTS:	National Science Foundation Grant #BCS0410269 
#		   	Based on Renard and Freimund, 1994.
# COPYRIGHT:	   	(C) 2007 by Isaac Ullah, Michael Barton, Arizona State University
#		   	This program is free software under the GNU General Public
#		   	License (>=v2). Read the file COPYING that comes with GRASS
#		   	for details.
#
#############################################################################


#%Module
#%  description: Calculates estimated annual (and optionally monthly) R factor for use in r.landscape.evol from mean annual precip, and monthly average precip maps. This script operates iteratively on input maps already in the current mapset which conform to the naming convention "prefix(ie. the prefix specified in r.climate)_Month(ie. "Dec" for december map or "Ann" for yearly map)_year(integer year number of precip map starting from most recent and ascending as you go backwards in time). An example is: "rainfall_Ann_2000" which would be the name of a map of average annual precip for the year 2000BP that has a prefix of "rainfall"). This naming convention will be automatically generated by r.climate. When entering the input prefixes here, leave off the year number (ie "_2000") as these will be controlled by the variables "max", "min", and "stepsize". An example input prefix is: "rainfall_Ann" for all average annual precip maps.
#%End
#%option
#% key: annual
#% type: string
#% description: Input annual precip map prefix.
#% answer: prefix_Ann
#% required : yes
#%END
#%option
#% key: jan
#% type: string
#% description: Input Jan average precip map prefix.
#% answer: prefix_Jan
#% required : yes
#%END
#%option
#% key: feb
#% type: string
#% description: Input Feb average precip map prefix.
#% answer: prefix_Feb
#% required : yes
#%END
#%option
#% key: mar
#% type: string
#% description: Input Mar average precip map prefix.
#% answer: prefix_Mar
#% required : yes
#%END
#%option
#% key: apr
#% type: string
#% description: Input Apr average precip map prefix.
#% answer: prefix_Apr
#% required : yes
#%END
#%option
#% key: may
#% type: string
#% description: Input May average precip map prefix.
#% answer: prefix_May
#% required : yes
#%END
#%option
#% key: jun
#% type: string
#% description: Input Jun average precip map prefix.
#% answer: prefix_Jun
#% required : yes
#%END
#%option
#% key: jul
#% type: string
#% description: Input Jul average precip map prefix.
#% answer: prefix_Jul
#% required : yes
#%END
#%option
#% key: aug
#% type: string
#% description: Input Aug average precip map prefix.
#% answer: prefix_Aug
#% required : yes
#%END
#%option
#% key: sep
#% type: string
#% description: Input Sep average precip map prefix.
#% answer: prefix_Sep
#% required : yes
#%END
#%option
#% key: oct
#% type: string
#% description: Input Oct average precip map prefix.
#% answer: prefix_Oct
#% required : yes
#%END
#%option
#% key: nov
#% type: string
#% description: Input Nov average precip map prefix.
#% answer: prefix_Nov
#% required : yes
#%END
#%option
#% key: dec
#% type: string
#% description: Input Dec average precip map prefix.
#% answer: prefix_Dec
#% required : yes
#%END
#%option
#% key: prefx
#% type: string
#% description: Prefix for all output map(s).
#% answer: rfactor
#% required : yes
#%END
#%option
#% key: max
#% type: integer
#% description: Maximum step value (ie. oldest (finish) year)
#% required : yes
#%END
#%option
#% key: min
#% type: integer
#% description: Minimum sgtep value (ie. youngest (start) year)
#% required : yes
#%END
#%option
#% key: stepsize
#% type: integer
#% description: Iteration step value (ie. number of years between steps)
#% required : yes
#%END
#%flag
#% key: m
#% description: -m Calcuate average monthly R factor maps as well.
#%END
#%flag
#% key: f
#% description: -f Output Modified Fournier Index map(s) as well.
#%END

if  [ -z "$GISBASE" ] ; then
 echo "You must be in GRASS GIS to run this program." >&2
 exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
  exec g.parser "$0" "$@"
fi

annual=$GIS_OPT_annual
jan=$GIS_OPT_jan
feb=$GIS_OPT_feb
mar=$GIS_OPT_mar
apr=$GIS_OPT_apr
may=$GIS_OPT_may
jun=$GIS_OPT_jun
jul=$GIS_OPT_jul
aug=$GIS_OPT_aug
sep=$GIS_OPT_sep
oct=$GIS_OPT_oct
nov=$GIS_OPT_nov
dec=$GIS_OPT_dec
prefx=$GIS_OPT_prefx
echo "prefix=$prefx"
res=`eval g.region -m | grep "nsres=" | cut -d = -f 2`
echo "res=$res"
rannual=$prefx"_$annual"
echo "annual r factor map prefix=$rannual"
fm=$prefx"_$annual""_fournier"
step=$GIS_OPT_min
max=$GIS_OPT_max
stepsize=$GIS_OPT_stepsize

if [ "$GIS_FLAG_f" -eq 1 ]; then
echo "annual modified fournier index map prefix=$fm"
fi

if [ "$GIS_FLAG_m" -eq 1 ]; then
fmjan=$prefx"_$jan""_fournier"
fmfeb=$prefx"_$feb""_fournier"
fmmar=$prefx"_$mar""_fournier"
fmapr=$prefx"_$apr""_fournier"
fmmay=$prefx"_$may""_fournier"
fmjun=$prefx"_$jun""_fournier"
fmjul=$prefx"_$jul""_fournier"
fmaug=$prefx"_$aug""_fournier"
fmsep=$prefx"_$sep""_fournier"
fmoct=$prefx"_$oct""_fournier"
fmnov=$prefx"_$nov""_fournier"
fmdec=$prefx"_$dec""_fournier"
rjan=$prefx"_$jan""_r"
echo "jan r factor map prefix=$rjan"
rfeb=$prefx"_$feb""_r"
echo "feb r factor map prefix=$rfeb"
rmar=$prefx"_$mar""_r"
echo "mar r factor map prefix=$rmar"
rapr=$prefx"_$apr""_r"
echo "apr r factor map prefix=$rapr"
rmay=$prefx"__$may""_r"
echo "may r factor map prefix=$rmay"
rjun=$prefx"_$jun""_r"
echo "jun r factor map prefix=$rjun"
rjul=$prefx"_$jul""_r"
echo "jul r factor map prefix=$rjul"
raug=$prefx"_$aug""_r"
echo "aug r factor map prefix=$raug"
rsep=$prefx"_$sep""_r"
echo "sep r factor map prefix=$rsep"
roct=$prefx"_$oct""_r"
echo "oct r factor map prefix=$roct"
rnov=$prefx"_$nov""_r"
echo "nov r factor map prefix=$rnov"
rdec=$prefx"_$dec""_r"
echo "dec r factor map prefix=$rdec"
fi

if [ "$GIS_FLAG_m" -eq 1 -a "$GIS_FLAG_f" -eq 1 ]; then
echo "jan modified fournier index map prefix=$fmjan"
echo "feb modified fournier index map prefix=$fmfeb"
echo "mar modified fournier index map prefix=$fmmar"
echo "apr modified fournier index map prefix=$fmapr"
echo "may modified fournier index map prefix=$fmrmay"
echo "jun modified fournier index map prefix=$fmjun"
echo "jul modified fournier index map prefix=$fmjul"
echo "aug modified fournier index map prefix=$fmaug"
echo "sep modified fournier index map prefix=$fmsep"
echo "oct modified fournier index map prefix=$fmoct"
echo "nov modified fournier index map prefix=$fmnov"
echo "dec modified fournier index map prefix=$fmdec"
fi


# We must calculate the output map(s) for the first year before entering a "while" loop to get the output map(s) for the rest of the years. This is because the "while" loop will actually start at "step + stepsize" (ie. the second year) instead of the first year...

#now we must create a MASK to work under (becuse of the consequent NULL modification needed)

r.mapcalc "MASK=if(isnull($ranual"_$step"), null(), 1)"

echo ""
echo "*************************"
echo "ITERATION $step"
echo "*************************"
echo ""



if [ "$GIS_FLAG_m" -eq 1 ]; then
echo ""
echo "******First making annual R factor map******"
echo ""
fi


echo ""
echo "*************************"
echo "step 1 of 2: Calculating Modified Fournier Index map"
echo "*************************"
echo ""


r.mapcalc "$fm"_$step"=((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)/$annual"_$step""


echo ""
echo "*************************"
echo "step 2 of 2: Calculating estimated R-factor map"
echo "*************************"
echo ""

#Below are the two the r-factor regression conversions suggested by Renard and Freimund (1994)for Fournier < 55 and Fournier > 55. However, with the maps I have used to test this script, the first regression outputs unreasonable r factor values. Therefore, this module only uses the second regresion for all Fournier Index values. Please see Renard and Friemund (1994) for their explanation of why two different regressions should be used.
#r.mapcalc "$output=if($fm<55,(0.07397*exp($fm,1.847))/17.2,(95.77-(6.081*$fm)+(0.477*exp($fm,2)))/17.2)"

r.mapcalc "$rannual"_$step"=(95.77-(6.081*$fm"_$step")+(0.477*exp($fm"_$step",2)))/17.2"

#now we must change any null values produced to zero

r.mapcalc "$rannual"_$step"=if(isnull($rannual"_$step"), 0, $rannual"_$step")"


if [ "$GIS_FLAG_m" -eq 1 ]; then
echo ""
echo "******Now making monthly R factor maps******"
echo ""
echo ""
echo "*************************"
echo "step 1 of 2: Calculating Modified Fournier Index maps for each month. This may take some time..."
echo "*************************"
echo ""

r.mapcalc "$fmjan"_$step"=(exp($jan"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

r.mapcalc "$fmfeb"_$step"=(exp($feb"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

r.mapcalc "$fmmar"_$step"=(exp($mar"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

r.mapcalc "$fmapr"_$step"=(exp($apr"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

r.mapcalc "$fmmay"_$step"=(exp($may"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

r.mapcalc "$fmjun"_$step"=(exp($jun"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

r.mapcalc "$fmjul"_$step"=(exp($jul"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

r.mapcalc "$fmaug"_$step"=(exp($aug"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

r.mapcalc "$fmsep"_$step"=(exp($sep"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep,2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

r.mapcalc "$fmoct"_$step"=(exp($oct"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

r.mapcalc "$fmnov"_$step"=(exp($nov"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

r.mapcalc "$fmdec"_$step"=(exp($dec"_$step",2))/((exp($jan"_$step",2)+exp($feb,2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

echo ""
echo "*************************"
echo "step 2 of 2: Calculating estimated monthly R-factor maps. This may take some time..."
echo "*************************"
echo ""

r.mapcalc "$rjan"_$step"=(95.77-(6.081*$fmjan"_$step")+(0.477*exp($fmjan"_$step",2)))/17.2"

r.mapcalc "$rjan"_$step"=if(isnull($rjan"_$step"), 0, $rjan"_$step")"

r.mapcalc "$rfeb"_$step"=(95.77-(6.081*$fmfeb"_$step")+(0.477*exp($fmfeb"_$step",2)))/17.2"

r.mapcalc "$rfeb"_$step"=if(isnull($rfeb"_$step"), 0, $rfeb"_$step")"

r.mapcalc "$rmar"_$step"=(95.77-(6.081*$fmmar"_$step")+(0.477*exp($fmmar"_$step",2)))/17.2"

r.mapcalc "$rmar"_$step"=if(isnull($rmar"_$step"), 0, $rmar"_$step")"

r.mapcalc "$rapr"_$step"=(95.77-(6.081*$fmapr"_$step")+(0.477*exp($fmapr"_$step",2)))/17.2"

r.mapcalc "$rapr"_$step"=if(isnull($rapr"_$step"), 0, $rapr"_$step")"

r.mapcalc "$rmay"_$step"=(95.77-(6.081*$fmmay"_$step")+(0.477*exp($fmmay"_$step",2)))/17.2"

r.mapcalc "$rmay"_$step"=if(isnull($rmay"_$step"), 0, $rmay"_$step")"

r.mapcalc "$rjun"_$step"=(95.77-(6.081*$fmjun"_$step")+(0.477*exp($fmjun"_$step",2)))/17.2"

r.mapcalc "$rjun"_$step"=if(isnull($rjun"_$step"), 0, $rjun"_$step")"

r.mapcalc "$rjul"_$step"=(95.77-(6.081*$fmjul"_$step")+(0.477*exp($fmjul"_$step",2)))/17.2"

r.mapcalc "$rjul"_$step"=if(isnull($rjul"_$step"), 0, $rjul"_$step")"

r.mapcalc "$raug"_$step"=(95.77-(6.081*$fmaug"_$step")+(0.477*exp($fmaug"_$step",2)))/17.2"

r.mapcalc "$raug"_$step"=if(isnull($raug"_$step"), 0, $raug"_$step")"

r.mapcalc "$rsep"_$step"=(95.77-(6.081*$fmsep"_$step")+(0.477*exp($fmsep"_$step",2)))/17.2"

r.mapcalc "$rsep"_$step"=if(isnull($rsep"_$step"), 0, $rsep"_$step")"

r.mapcalc "$roct"_$step"=(95.77-(6.081*$fmoct"_$step")+(0.477*exp($fmoct"_$step",2)))/17.2"

r.mapcalc "$roct"_$step"=if(isnull($roct"_$step"), 0, $roct"_$step")"

r.mapcalc "$rnov"_$step"=(95.77-(6.081*$fmnov"_$step")+(0.477*exp($fmnov"_$step",2)))/17.2"

r.mapcalc "$rnov"_$step"=if(isnull($rnov"_$step"), 0, $rnov"_$step")"

r.mapcalc "$rdec"_$step"=(95.77-(6.081*$fmdec"_$step")+(0.477*exp($fmdec"_$step",2)))/17.2"

r.mapcalc "$rdec"_$step"=if(isnull($rdec"_$step"), 0, $rdec"_$step")"

fi

# now we must enter a loop to get the subsequent years' output maps...

while [ "$step" -le "$max" ]
do
	step=$(($step+$stepsize))
	
	# the above statement controls the loop...

	echo ""
	echo "*************************"
	echo "ITERATION $step"
	echo "*************************"
	echo ""


	if [ "$GIS_FLAG_m" -eq 1 ]; then
	echo ""
	echo "******First making annual R factor map******"
	echo ""
	fi


	echo ""
	echo "*************************"
	echo "step 1 of 2: Calculating Modified Fournier Index map"
	echo "*************************"
	echo ""


	r.mapcalc "$fm"_$step"=((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)/$annual"_$step""


	echo ""
	echo "*************************"
	echo "step 2 of 2: Calculating estimated R-factor map"
	echo "*************************"
	echo ""
	
	#Below are the two the r-factor regression conversions suggested by Renard and Freimund (1994)for Fournier < 55 and Fournier > 55. However, with the maps I have used to test this script, the first regression outputs unreasonable r factor values. Therefore, this module only uses the second regresion for all Fournier Index values. Please see Renard and Friemund (1994) for their explanation of why two different regressions should be used.
	#r.mapcalc "$output=if($fm<55,(0.07397*exp($fm,1.847))/17.2,(95.77-(6.081*$fm)+(0.477*exp($fm,2)))/17.2)"

	r.mapcalc "$rannual"_$step"=(95.77-(6.081*$fm"_$step")+(0.477*exp($fm"_$step",2)))/17.2"

	#now we must change any null values produced to zero

	r.mapcalc "$rannual"_$step"=if(isnull($rannual"_$step"), 0, $rannual"_$step")"

	if [ "$GIS_FLAG_m" -eq 1 ]; then
	echo ""
	echo "******Now making monthly R factor maps******"
	echo ""
	echo ""
	echo "*************************"
	echo "step 1 of 2: Calculating Modified Fournier Index maps for each month. This may take some time..."
	echo "*************************"
	echo ""

	r.mapcalc "$fmjan"_$step"=(exp($jan"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

	r.mapcalc "$fmfeb"_$step"=(exp($feb"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

	r.mapcalc "$fmmar"_$step"=(exp($mar"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

	r.mapcalc "$fmapr"_$step"=(exp($apr"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

	r.mapcalc "$fmmay"_$step"=(exp($may"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

	r.mapcalc "$fmjun"_$step"=(exp($jun"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

	r.mapcalc "$fmjul"_$step"=(exp($jul"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

	r.mapcalc "$fmaug"_$step"=(exp($aug"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

	r.mapcalc "$fmsep"_$step"=(exp($sep"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep,2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

	r.mapcalc "$fmoct"_$step"=(exp($oct"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

	r.mapcalc "$fmnov"_$step"=(exp($nov"_$step",2))/((exp($jan"_$step",2)+exp($feb"_$step",2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

	r.mapcalc "$fmdec"_$step"=(exp($dec"_$step",2))/((exp($jan"_$step",2)+exp($feb,2)+exp($mar"_$step",2)+exp($apr"_$step",2)+exp($may"_$step",2)+exp($jun"_$step",2)+exp($jul"_$step",2)+exp($aug"_$step",2)+exp($sep"_$step",2)+exp($oct"_$step",2)+exp($nov"_$step",2)+exp($dec"_$step",2))/12)"

	echo ""
	echo "*************************"
	echo "step 2 of 2: Calculating estimated monthly R-factor maps. This may take some time..."
	echo "*************************"
	echo ""

	r.mapcalc "$rjan"_$step"=(95.77-(6.081*$fmjan"_$step")+(0.477*exp($fmjan"_$step",2)))/17.2"

	r.mapcalc "$rjan"_$step"=if(isnull($rjan"_$step"), 0, $rjan"_$step")"

	r.mapcalc "$rfeb"_$step"=(95.77-(6.081*$fmfeb"_$step")+(0.477*exp($fmfeb"_$step",2)))/17.2"

	r.mapcalc "$rfeb"_$step"=if(isnull($rfeb"_$step"), 0, $rfeb"_$step")"

	r.mapcalc "$rmar"_$step"=(95.77-(6.081*$fmmar"_$step")+(0.477*exp($fmmar"_$step",2)))/17.2"

	r.mapcalc "$rmar"_$step"=if(isnull($rmar"_$step"), 0, $rmar"_$step")"

	r.mapcalc "$rapr"_$step"=(95.77-(6.081*$fmapr"_$step")+(0.477*exp($fmapr"_$step",2)))/17.2"

	r.mapcalc "$rapr"_$step"=if(isnull($rapr"_$step"), 0, $rapr"_$step")"

	r.mapcalc "$rmay"_$step"=(95.77-(6.081*$fmmay"_$step")+(0.477*exp($fmmay"_$step",2)))/17.2"

	r.mapcalc "$rmay"_$step"=if(isnull($rmay"_$step"), 0, $rmay"_$step")"

	r.mapcalc "$rjun"_$step"=(95.77-(6.081*$fmjun"_$step")+(0.477*exp($fmjun"_$step",2)))/17.2"

	r.mapcalc "$rjun"_$step"=if(isnull($rjun"_$step"), 0, $rjun"_$step")"

	r.mapcalc "$rjul"_$step"=(95.77-(6.081*$fmjul"_$step")+(0.477*exp($fmjul"_$step",2)))/17.2"

	r.mapcalc "$rjul"_$step"=if(isnull($rjul"_$step"), 0, $rjul"_$step")"

	r.mapcalc "$raug"_$step"=(95.77-(6.081*$fmaug"_$step")+(0.477*exp($fmaug"_$step",2)))/17.2"

	r.mapcalc "$raug"_$step"=if(isnull($raug"_$step"), 0, $raug"_$step")"

	r.mapcalc "$rsep"_$step"=(95.77-(6.081*$fmsep"_$step")+(0.477*exp($fmsep"_$step",2)))/17.2"

	r.mapcalc "$rsep"_$step"=if(isnull($rsep"_$step"), 0, $rsep"_$step")"

	r.mapcalc "$roct"_$step"=(95.77-(6.081*$fmoct"_$step")+(0.477*exp($fmoct"_$step",2)))/17.2"

	r.mapcalc "$roct"_$step"=if(isnull($roct"_$step"), 0, $roct"_$step")"

	r.mapcalc "$rnov"_$step"=(95.77-(6.081*$fmnov"_$step")+(0.477*exp($fmnov"_$step",2)))/17.2"

	r.mapcalc "$rnov"_$step"=if(isnull($rnov"_$step"), 0, $rnov"_$step")"

	r.mapcalc "$rdec"_$step"=(95.77-(6.081*$fmdec"_$step")+(0.477*exp($fmdec"_$step",2)))/17.2"

	r.mapcalc "$rdec"_$step"=if(isnull($rdec"_$step"), 0, $rdec"_$step")"

	fi





done

# The loop is now finished.

echo ""
echo "ITERATIONS FINISHED"
echo ""
echo "Checking for cleanup options..."
echo ""

# Entering the cleanup stage. This requires a nested if statement because of the optional flags...


if [ "$GIS_FLAG_m" -eq 1 -a "$GIS_FLAG_f" -eq 1 ]; then
echo ""
echo "Done"
echo ""

elif [ "$GIS_FLAG_m" -eq 1 -a "$GIS_FLAG_f" -eq 0 ]; then

echo ""
echo "Cleaning up"
echo ""

g.mremove rast=$fm*

echo ""
echo "Done"
echo ""

elif [ "$GIS_FLAG_m" -eq 0 -a "$GIS_FLAG_f" -eq 1 ]; then

echo ""
echo "Done"
echo ""

else


echo ""
echo "Cleaning up"
echo ""

g.mremove rast=$fm*

echo ""
echo "Done"
echo ""

fi

#now we remove our MASK

g.remove rast=MASK

echo ""
echo "DONE WITH EVERYTHING!"
echo ""
