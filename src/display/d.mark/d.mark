#!/bin/sh
# d.mark - quickly display site data in a nice way
#
# COPYRIGHT:	(c) 2007-2013 by Hamish Bowman
#
#	This program is free software under the GNU General Public
#	License (>=v2). Read the file COPYING that comes with GRASS
#	for details.
#

#%Module
#% description: Quickly display a marker on the display monitor
#%End
#%option
#% key: at
#% type: double
#% key_desc: x,y
#% description: Placement coordinates (in percentage, 0,0 is lower left)
#% required : yes
#%end
#%option
#% key: symbol
#% type: string
#% key_desc: name
#% description: Basic symbol to use
#% answer: triangle
#% options: 4pt_star,adcp,airport,alpha_flag,arrow1,arrow2,arrow3,box,bridge,circle,compass,cross1,cross2,cross3,diamond,dim_arrow,dive_flag,fancy_compass,fiducial,fish,half-arrow_left,half-arrow_right,half-box,half-circle,marker,muchomurka,n_arrow1,n_arrow1b,n_arrow2,n_arrow3,n_arrow4,n_arrow5,n_arrow6,n_arrow7a,n_arrow7b,n_arrow8a,n_arrow8b,n_arrow9,octagon,offbox_ne,offbox_nw,offbox_se,offbox_sw,pentagon,ping,point,pushpin,ring,simple_zia,smrk,star,strike_box,strike_circle,strike_half-bowtie,strike_line,strike_triangle,target,triangle,x
#% required : no
#%end
#%option
#% key: color
#% type: string
#% description: Symbol outline color
#% gisprompt: color,grass,color
#% answer: black
#% required : no
#%end
#%option
#% key: fcolor
#% type: string
#% description: Symbol fill color
#% gisprompt: color,grass,color
#% answer: yellow
#% required : no
#%end
#%option
#% key: size
#% type: integer
#% description: Symbol size
#% answer: 12
#% required : no
#%end
#%option
#% key: rotation
#% type: double
#% description: Rotation angle in degrees (counter-clockwise)
#% answer: 0
#% required : no
#%end
#%option
#% key: width
#% type: double
#% description: Line width
#% answer: 0
#% required : no
#%end
#%flag
#% key: m
#% description: Coordinates are given in map units
#%end

if [ -z $GISBASE ] ; then
        echo "You have to be in GRASS to use this."
        exit
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
    exec g.parser "$0" "$@"
fi


COORD=`echo "$GIS_OPT_AT" | tr ',' ' '`
SYMBOL=`basename "$GIS_OPT_SYMBOL"`

if [ $GIS_FLAG_M -eq 0 ] ; then
    MAPUN=""

    COORD_x=`echo $COORD | cut -f1 -d' ' | cut -f1 -d'.'`
    if [ "$COORD_x" -lt -40 ] || [ "$COORD_x" -gt 140 ] ; then
	g.message "Pretty big value for % of frame. Did you mean to use the -m flag?"
    fi
else
    MAPUN="-m"
fi


if [ "$GIS_OPT_WIDTH" != "0" ] ; then
   DOWIDTH="width $GIS_OPT_WIDTH"
else
   DOWIDTH=""
fi

if [ "$GIS_OPT_ROTATION" != "0" ] ; then
   DOROT="rotation $GIS_OPT_ROTATION"
else
   DOROT=""
fi

# uncomment to generate #%options: list
#  for file in `find "$GISBASE/etc/symbol/" -type f`; do
#     basename "$file"
#  done | sort | grep -v '~$' | tr '\n' ',' | sed -e 's/,$//'
#

ICONS=$(
  for file in `find "$GISBASE/etc/symbol/" -type f`; do
     basename "$file"
  done
)

if [ `echo "$ICONS" | tr ' ' '\n' | grep -c "^$SYMBOL$"` -ne 1 ] ; then
    g.message -e "Trouble finding symbol \"$SYMBOL\""
    exit 1
fi

GROUPDIR=$(dirname `find "$GISBASE/etc/symbol/" -type f -name "$SYMBOL"`)
GROUP=`basename "$GROUPDIR"`
if [ -z "$GROUP" ] ; then
    g.message -e "Trouble locating symbol \"$GROUP/$SYMBOL\""
    exit 1
fi
g.message -d "selected symbol: [$GROUP/$SYMBOL]"


(
cat << EOF
$DOWIDTH
$DOROT
symbol $GROUP/$SYMBOL $GIS_OPT_SIZE $COORD $GIS_OPT_COLOR $GIS_OPT_FCOLOR
EOF
) | d.graph $MAPUN
